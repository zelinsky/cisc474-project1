class MazeNodes {
    constructor() {
        this.NODE_BOUND = 10;
        this.OFFSET = 20;
        this.NodeList = [{'adjacent': [1, 7], 'x': 54, 'y': 51},
        {'adjacent': [0, 2, 9], 'x': 191, 'y': 51},
        {'adjacent': [1, 3, 10], 'x': 330, 'y': 51},
        {'adjacent': [2, 4, 11], 'x': 433, 'y': 51},
        {'adjacent': [3, 5, 12], 'x': 536, 'y': 51},
        {'adjacent': [4, 6, 14], 'x': 675, 'y': 51},
        {'adjacent': [5, 15], 'x': 813, 'y': 51},
        {'adjacent': [0, 8, 16], 'x': 54, 'y': 144},
        {'adjacent': [1, 7, 9], 'x': 191, 'y': 144},
        {'adjacent': [8, 10], 'x': 260, 'y': 144},
        {'adjacent': [2, 9, 11, 19], 'x': 330, 'y': 144},
        {'adjacent': [3, 10, 12, 32], 'x': 433, 'y': 144},
        {'adjacent': [4, 11, 13, 22], 'x': 536, 'y': 144},
        {'adjacent': [12, 14, 28], 'x': 606, 'y': 144},
        {'adjacent': [5, 13, 15], 'x': 675, 'y': 144},
        {'adjacent': [0, 14], 'x': 813, 'y': 144},
        {'adjacent': [7, 17], 'x': 54, 'y': 206},
        {'adjacent': [16, 18, 44], 'x': 88, 'y': 206},
        {'adjacent': [17, 26], 'x': 158, 'y': 206},
        {'adjacent': [10, 20], 'x': 330, 'y': 206},
        {'adjacent': [19, 31], 'x': 364, 'y': 206},
        {'adjacent': [22, 33], 'x': 502, 'y': 206},
        {'adjacent': [12, 21], 'x': 536, 'y': 206},
        {'adjacent': [29, 24], 'x': 709, 'y': 206},
        {'adjacent': [23, 25], 'x': 779, 'y': 206},
        {'adjacent': [24, 15], 'x': 813, 'y': 206},
        {'adjacent': [18, 27], 'x': 158, 'y': 235},
        {'adjacent': [26, 9, 36], 'x': 260, 'y': 235},
        {'adjacent': [13, 29, 37], 'x': 606, 'y': 235},
        {'adjacent': [23, 28], 'x': 709, 'y': 235},
        {'adjacent': [31, 40], 'x': 330, 'y': 268},
        {'adjacent': [20, 30, 32], 'x': 364, 'y': 268},
        {'adjacent': [31, 11, 33], 'x': 433, 'y': 268},
        {'adjacent': [21, 34, 32], 'x': 502, 'y': 268},
        {'adjacent': [33, 42], 'x': 536, 'y': 268},
        {'adjacent': [45, 36], 'x': 158, 'y': 303},
        {'adjacent': [27, 35, 39], 'x': 260, 'y': 303},
        {'adjacent': [28, 38, 43], 'x': 606, 'y': 303},
        {'adjacent': [37, 46], 'x': 709, 'y': 303},
        {'adjacent': [36, 40, 50], 'x': 260, 'y': 332},
        {'adjacent': [30, 39, 53, 41], 'x': 330, 'y': 332},
        {'adjacent': [40, 42, 48], 'x': 433, 'y': 332},
        {'adjacent': [34, 43, 41, 56], 'x': 536, 'y': 332},
        {'adjacent': [37, 42, 51], 'x': 606, 'y': 332},
        {'adjacent': [17, 45, 58], 'x': 88, 'y': 364},
        {'adjacent': [35, 49, 44], 'x': 158, 'y': 364},
        {'adjacent': [38, 52, 47], 'x': 709, 'y': 364},
        {'adjacent': [24, 46, 65], 'x': 779, 'y': 364},
        {'adjacent': [41], 'x': 433, 'y': 394},
        {'adjacent': [45, 50, 59], 'x': 158, 'y': 457},
        {'adjacent': [39, 49, 60], 'x': 260, 'y': 457},
        {'adjacent': [43, 52, 63], 'x': 606, 'y': 457},
        {'adjacent': [46, 51, 64], 'x': 709, 'y': 457},
        {'adjacent': [40, 54, 61], 'x': 330, 'y': 487},
        {'adjacent': [53, 55, 73], 'x': 396, 'y': 487},
        {'adjacent': [54, 56, 74], 'x': 466, 'y': 487},
        {'adjacent': [42, 55, 62], 'x': 536, 'y': 487},
        {'adjacent': [58, 67], 'x': 54, 'y': 522},
        {'adjacent': [44, 57, 59], 'x': 88, 'y': 522},
        {'adjacent': [49, 60, 69, 58], 'x': 158, 'y': 522},
        {'adjacent': [50, 61, 71, 59], 'x': 260, 'y': 522},
        {'adjacent': [53, 60], 'x': 330, 'y': 522},
        {'adjacent': [56, 63], 'x': 536, 'y': 522},
        {'adjacent': [51, 64, 62, 76], 'x': 606, 'y': 522},
        {'adjacent': [63, 52, 65, 78], 'x': 709, 'y': 522},
        {'adjacent': [64, 47, 66], 'x': 779, 'y': 522},
        {'adjacent': [65, 80], 'x': 813, 'y': 522},
        {'adjacent': [57, 68], 'x': 54, 'y': 586},
        {'adjacent': [67, 81], 'x': 88, 'y': 586},
        {'adjacent': [59, 70], 'x': 158, 'y': 586},
        {'adjacent': [69, 71, 83], 'x': 191, 'y': 586},
        {'adjacent': [60, 70, 72], 'x': 260, 'y': 586},
        {'adjacent': [71, 73, 86], 'x': 330, 'y': 586},
        {'adjacent': [72, 54], 'x': 396, 'y': 586},
        {'adjacent': [55, 75], 'x': 466, 'y': 586},
        {'adjacent': [74, 76, 89], 'x': 536, 'y': 586},
        {'adjacent': [75, 63, 77], 'x': 606, 'y': 586},
        {'adjacent': [76, 78, 92], 'x': 675, 'y': 586},
        {'adjacent': [77, 64], 'x': 709, 'y': 586},
        {'adjacent': [80, 94], 'x': 779, 'y': 586},
        {'adjacent': [79, 66], 'x': 813, 'y': 586},
        {'adjacent': [68, 82, 96], 'x': 88, 'y': 645},
        {'adjacent': [81, 83, 107], 'x': 158, 'y': 645},
        {'adjacent': [70, 82, 84], 'x': 191, 'y': 645},
        {'adjacent': [83, 97], 'x': 224, 'y': 645},
        {'adjacent': [99, 86], 'x': 294, 'y': 645},
        {'adjacent': [72, 85, 87], 'x': 330, 'y': 645},
        {'adjacent': [86, 88, 111], 'x': 396, 'y': 645},
        {'adjacent': [87, 89, 112], 'x': 466, 'y': 645},
        {'adjacent': [88, 75, 90], 'x': 536, 'y': 645},
        {'adjacent': [89, 100], 'x': 569, 'y': 645},
        {'adjacent': [102, 92], 'x': 640, 'y': 645},
        {'adjacent': [77, 91, 93], 'x': 675, 'y': 645},
        {'adjacent': [92, 116, 94], 'x': 709, 'y': 645},
        {'adjacent': [93, 79, 103], 'x': 779, 'y': 645},
        {'adjacent': [96, 105], 'x': 54, 'y': 680},
        {'adjacent': [81, 95], 'x': 88, 'y': 680},
        {'adjacent': [84, 98], 'x': 191, 'y': 680},
        {'adjacent': [97, 99, 109], 'x': 260, 'y': 680},
        {'adjacent': [85, 98], 'x': 294, 'y': 680},
        {'adjacent': [90, 101], 'x': 569, 'y': 680},
        {'adjacent': [100, 114, 102], 'x': 606, 'y': 680},
        {'adjacent': [101, 91], 'x': 640, 'y': 680},
        {'adjacent': [94, 104], 'x': 779, 'y': 680},
        {'adjacent': [103, 118], 'x': 813, 'y': 680},
        {'adjacent': [95, 106, 119], 'x': 54, 'y': 741},
        {'adjacent': [105, 107, 120], 'x': 120, 'y': 741},
        {'adjacent': [82, 106, 108], 'x': 158, 'y': 741},
        {'adjacent': [107, 109, 121], 'x': 191, 'y': 741},
        {'adjacent': [98, 108, 110], 'x': 260, 'y': 741},
        {'adjacent': [109, 11, 122], 'x': 330, 'y': 741},
        {'adjacent': [87, 110], 'x': 330, 'y': 741},
        {'adjacent': [88, 113], 'x': 466, 'y': 741},
        {'adjacent': [112, 114, 123], 'x': 536, 'y': 741},
        {'adjacent': [101, 113, 115], 'x': 606, 'y': 741},
        {'adjacent': [114, 116, 124], 'x': 675, 'y': 741},
        {'adjacent': [93, 115, 117], 'x': 709, 'y': 741},
        {'adjacent': [116, 118, 125], 'x': 745, 'y': 741},
        {'adjacent': [104, 117, 126], 'x': 813, 'y': 741},
        {'adjacent': [105, 120], 'x': 54, 'y': 802},
        {'adjacent': [106, 119], 'x': 120, 'y': 802},
        {'adjacent': [108, 122], 'x': 191, 'y': 802},
        {'adjacent': [110, 121, 123], 'x': 330, 'y': 802},
        {'adjacent': [113, 122, 124], 'x': 536, 'y': 802},
        {'adjacent': [115, 123], 'x': 675, 'y': 802},
        {'adjacent': [117, 126], 'x': 745, 'y': 802},
        {'adjacent': [125, 118], 'x': 813, 'y': 802}]; 
    }

    nodeCollide(x, y) {
        var i = 0;
        for (i = 0; i < this.NodeList.length; i++) {20
            if ((Math.abs((this.NodeList[i].x - this.OFFSET) - x) < this.NODE_BOUND) 
                && (Math.abs((this.NodeList[i].y - this.OFFSET) - y) < this.NODE_BOUND)) {
                return true;
            }
        }
        return false;
    }
}